[tool.poetry]
name = "finagent"
version = "0.1.0"
description = "Agent IA pour analyse d'actions financières"
authors = ["Bastien Javaux <bastien.javaux@example.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/bastienjavaux/finagent"
repository = "https://github.com/bastienjavaux/finagent"
documentation = "https://finagent.readthedocs.io"
keywords = ["finance", "ai", "trading", "analysis", "claude", "openbb"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial :: Investment",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
packages = [{include = "finagent"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"

# CLI & Interface
click = "^8.1.7"
rich = "^13.7.0"
prompt-toolkit = "^3.0.43"

# Data & Finance
openbb = "^4.1.0"
pandas = "^2.1.4"
numpy = "^1.26.2"
yfinance = "^0.2.18"

# AI & HTTP
openai = "^1.12.0"
anthropic = "^0.18.0"
httpx = "^0.27.0"
tenacity = "^8.2.3"
ollama = "^0.2.1"

# Database & Persistence
sqlalchemy = "^2.0.25"
alembic = "^1.13.1"

# Configuration & Validation
pydantic = "^2.5.3"
pydantic-settings = "^2.1.0"
pyyaml = "^6.0.1"

# Security
cryptography = "^42.0.2"
keyring = "^24.3.0"
python-dotenv = "^1.0.0"

# Logging
structlog = "^23.2.0"

# Utilities
arrow = "^1.3.0"
schedule = "^1.2.1"
cachetools = "^5.3.2"
psutil = "^5.9.6"
textblob = "^0.19.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"
coverage = "^7.4.0"
black = "^23.12.1"
ruff = "^0.1.9"
mypy = "^1.8.0"
pre-commit = "^3.6.0"

[tool.poetry.scripts]
finagent = "finagent.main:cli_entry_point"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Configuration des outils de développement
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Répertoires à exclure
  \.git
  | \.venv
  | build
  | dist
  | data
)/
'''

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "B",  # flake8-bugbear
    "S",  # flake8-bandit
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "S101",  # Use of assert
    "S603",  # subprocess untrusted input
    "E501",  # Line too long (handled by black)
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "S106", "S107"]
"scripts/*" = ["S603", "S607"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "openbb.*",
    "yfinance.*",
    "structlog.*",
    "keyring.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
]

[tool.coverage.run]
source = ["finagent"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/scripts/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
precision = 2
skip_covered = false
skip_empty = false

[tool.coverage.html]
directory = "htmlcov"